{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/UI/Input/Input.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","containers/Auth/Auth.css","hoc/Auxx/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","shared/utility.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","SideDrawer","Open","Close","Logo","Input","Label","InputElement","Invalid","BuildControl","Less","More","Toolbar","DesktopOnly","NavigationItem","active","BuildControls","OrderButton","enable","Button","Success","Danger","Content","__webpack_require__","p","NavigationItems","DrawerToggle","Backdrop","Burger","Modal","Loader","load2","CheckoutSummray","ContactData","Order","Auth","aux","props","children","logo","react_default","a","createElement","className","classes","style","height","src","burgerLogo","alt","navigationItem","react_router_dom","to","link","exact","activeClassName","navigationItems","NavigationItem_NavigationItem","isAuthenticated","drawerToggle","onClick","clicked","toolbar","DrawerToggle_DrawerToggle","drawerToggleClicked","Logo_Logo","NavigationItems_NavigationItems","isAuth","backdrop","show","sideDrawer","attachedClasses","open","Aux","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Component","connect","auth","token","BurgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","purchasable","ordered","nextProps","nextState","modalClosed","transform","opacity","button","btnType","OrderSummary","ingredientSummary","textTransform","Button_Button","purchaseCancelled","purchaseContinued","spinner","withErrorHandler","WrappedComponent","axios","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","message","instance","create","baseURL","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchaseHandler","purchasing","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","objectSpread","ings","orderSummary","Spinner_Spinner","Burger_Burger","BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","updatePurchaseState","Burger_OrderSummary_OrderSummary","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","maxLength","orderForm","name","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedFormElement","target","updatedOrderForm","defineProperty","console","log","formElementsArray","id","config","form","onSubmit","formElement","Input_Input","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","react_router","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","match","component","amount","ingredientOutput","ig","display","border","padding","Number","parseFloat","Orders","onFetchOrders","orders","Order_Order","queryParams","fetchedOrders","err","isEmail","password","isSignup","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignup","routes","hoc_Layout_Layout","withRouter","getItem","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","undefined","action","updatedIngredient","updatedState","addIngredient","updatedIng","updatedSt","removeIngredient","setIngredients","fetchIngredientsFailed","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df606de8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__2z9NQ\",\"BreadTop\":\"BurgerIngredient__BreadTop__2Pkwe\",\"Seeds1\":\"BurgerIngredient__Seeds1__2k2x7\",\"Seeds2\":\"BurgerIngredient__Seeds2__9Mret\",\"Meat\":\"BurgerIngredient__Meat__1LdrR\",\"Cheese\":\"BurgerIngredient__Cheese__1eqwP\",\"Salad\":\"BurgerIngredient__Salad__2WBlr\",\"Bacon\":\"BurgerIngredient__Bacon__2RZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__3wvlM\",\"Open\":\"SideDrawer__Open__3xsf8\",\"Close\":\"SideDrawer__Close__2S6c7\",\"Logo\":\"SideDrawer__Logo__10IHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\",\"Invalid\":\"Input__Invalid__38X2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__ibcUQ\",\"Label\":\"BuildControl__Label__2VLnR\",\"Less\":\"BuildControl__Less__3X6hg\",\"More\":\"BuildControl__More__2eQpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2hkfg\",\"Logo\":\"Toolbar__Logo__24rue\",\"DesktopOnly\":\"Toolbar__DesktopOnly__15Sc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__3YSjr\",\"active\":\"NavigationItem__active__2GQz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__220uz\",\"OrderButton\":\"BuildControls__OrderButton__1ScSk\",\"enable\":\"BuildControls__enable__3XAWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__ajevi\",\"Success\":\"Button__Success__1DMln\",\"Danger\":\"Button__Danger__18hYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__3KSp3\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2A07e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__3HY9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__1eThf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__eeZpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__2h2kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__cd320\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__3dgUo\",\"load2\":\"Spinner__load2__1sg5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummray\":\"CheckoutSummary__CheckoutSummray__3Lphn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1whvJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__W-Npf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth__1TInt\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}} >\r\n        <img src={burgerLogo} alt=\"MyBurger\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from 'react';\r\nimport classes from './NavigationItem.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst navigationItem =(props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to = {props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>\r\n>           {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) =>(\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link =\"/\" exact>My Burger</NavigationItem>\r\n        {props.isAuthenticated ?<NavigationItem link =\"/orders\">Orders</NavigationItem> : null}\r\n        {!props.isAuthenticated \r\n            ? <NavigationItem link =\"/auth\">Sign Up/Sign In</NavigationItem>\r\n            : <NavigationItem link =\"/logout\">Logout</NavigationItem>}\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) =>(\r\n    <div className ={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div ></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className ={classes.Logo}>\r\n            <Logo/>\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated = {props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react'\r\nimport classes from './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className ={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxx/Aux';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses =[classes.SideDrawer, classes.Close];\r\n     if(props.open){\r\n       attachedClasses = [classes.SideDrawer, classes.Open];\r\n     }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                <Logo />\r\n            </div>\r\n            <nav>\r\n                <NavigationItems isAuthenticated = {props.isAuth}/>\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Aux from '../Auxx/Aux';\r\nimport classes from './Layout.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n//import { auth } from '../../store/actions';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n    \r\n    sideDrawerClosedHandler =() => {\r\n        this.setState({showSideDrawer:false});\r\n    }\r\n\r\n    sideDrawerToggleHandler =() => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    } \r\n\r\n    render() {\r\n        return( \r\n        <Aux>\r\n            <Toolbar \r\n            isAuth={this.props.isAuthenticated}\r\n            drawerToggleClicked = {this.sideDrawerToggleHandler} />\r\n            <SideDrawer \r\n            isAuth={this.props.isAuthenticated}\r\n            open={this.state.showSideDrawer} \r\n            closed={this.sideDrawerClosedHandler}/>\r\n            <main className={classes.Content}>\r\n                {this.props.children}\r\n            </main>\r\n        </Aux>\r\n        );\r\n    }\r\n} \r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps) (Layout);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n        let ingredient = null;\r\n        switch (this.props.type){\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case('bread-top'):\r\n                ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                </div>\r\n                );\r\n                break;\r\n            case('meat'):\r\n                    ingredient =<div className ={classes.Meat}></div>;\r\n                    break;\r\n            case('cheese'):\r\n                    ingredient = <div className ={classes.Cheese}></div>;\r\n                    break;\r\n            case('salad'):\r\n                    ingredient =<div className ={classes.Salad}></div>;\r\n                    break;\r\n            case('bacon'):\r\n                    ingredient =<div className ={classes.Bacon}></div>;\r\n                    break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\n\r\nconst burger = (props) => {\r\n  \r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n           return <BurgerIngredient key = {igKey +1} type = {igKey} />;\r\n        } );\r\n    } )\r\n    .reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n           {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.css';\r\n\r\nconst buildControl =(props) => (\r\n    <div className ={classes.BuildControl}>\r\n        <div className ={classes.Label}>{props.label}</div>\r\n        <button \r\n        className={classes.Less} \r\n        onClick={props.removed} \r\n        disabled={props.disabled}>Less</button>\r\n        <button \r\n        className={classes.More} \r\n        onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;\r\n","import React from 'react';\r\nimport classes from './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad'},\r\n    { label: 'Bacon', type: 'bacon'},\r\n    { label: 'Cheese', type: 'cheese'},\r\n    { label: 'Meat', type: 'meat'},\r\n];\r\n\r\nconst buildControls =(props) => (\r\n    <div className ={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                 key={ctrl.label} \r\n                 label ={ctrl.label}\r\n                 added = {()=> props.ingredientAdded(ctrl.type)}\r\n                 removed = {()=> props.ingredientRemoved(ctrl.type)}\r\n                 disabled={props.disabled[ctrl.type]}/>\r\n        ))}\r\n\r\n        <button \r\n            className={classes.OrderButton} \r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n\r\n    </div>\r\n\r\n);\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\nimport classes from './Modal.css';\r\nimport Aux from '../../../hoc/Auxx/Aux';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState){   \r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n    \r\n    render(){\r\n        return(<Aux>\r\n            <Backdrop show ={this.props.show} clicked = {this.props.modalClosed} />\r\n        <div \r\n            className ={classes.Modal}\r\n            style = {{\r\n                transform:this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: this.props.show ? '1' : '0'\r\n            }}>\r\n            {this.props.children}\r\n        </div>\r\n        </Aux>)\r\n    }\r\n} \r\n\r\nexport default Modal;\r\n\r\n","import React from 'react';\r\nimport classes from './Button.css';\r\n\r\nconst button = (props) =>(\r\n    <button\r\n    disabled={props.disabled}\r\n    className={[classes.Button, classes[props.btnType]].join(' ')}\r\n    onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\n\r\nexport default button;","import React, {Component} from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxx/Aux';\r\nimport Button from '../../UI/Button/Button'\r\n\r\nclass OrderSummary extends Component{\r\n   \r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(igKey =>{\r\n        return ( \r\n        <li key={igKey}>\r\n            <span style ={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n            </li> );\r\n    });\r\n\r\n        return( \r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients: </p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n        </Aux>);\r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.css';\r\n\r\n const spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n );\r\n\r\n export default spinner;","import React, {Component} from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxx/Aux';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component{\r\n        state = {\r\n            error: null\r\n        }\r\n        componentWillMount (){\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null})\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res=>res, error => {\r\n                this.setState({error: error})\r\n            });\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler =() =>{\r\n            this.setState({error: null})\r\n        }\r\n\r\n        render(){\r\n            return (\r\n                    <Aux>\r\n                        <Modal \r\n                            show={this.state.error}\r\n                            modalClosed={this.errorConfirmedHandler}>\r\n                            {this.state.error ? this.state.error.message: null}\r\n                        </Modal>\r\n                        <WrappedComponent {...this.props}/>\r\n                    </Aux>\r\n            );\r\n        }\r\n    }\r\n} \r\n  \r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-7ae23.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () =>{\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId,\r\n\r\n    };\r\n};\r\n\r\nexport const authFail = (error) =>{\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return{\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(()=>{\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup ) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC7RD2oTne98h2TZWrWFQQCuxan4819uWQ';\r\n        if(!isSignup){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC7RD2oTne98h2TZWrWFQQCuxan4819uWQ'\r\n        }\r\n\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date (new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n        \r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return{\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token) {\r\n            dispatch(logout());\r\n        } else{\r\n            const expirationDate = new Date (localStorage.getItem('expirationDate'));\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n        }\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH START';\r\nexport const AUTH_SUCCESS = 'AUTH SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, { Component} from 'react';\r\nimport Aux from '../../hoc/Auxx/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\n\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\n\r\nclass BurgerBuilder extends Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state={...}\r\n    // }\r\n    state = {\r\n        ingredients: null,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey=>{\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) =>{\r\n                return sum + el;\r\n            },0);\r\n            return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if(this.props.isAuthenticated){\r\n            this.setState({purchasing: true})\r\n        }else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n        \r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing:false});\r\n    }\r\n\r\n    purchaseContinueHandler = () =>{\r\n    this.props.onInitPurchase();\r\n    this.props.history.push('/checkout');\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger = this.props.error ?<p>Ingredients can't be loaded</p>:<Spinner/>;\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients = {this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded = {this.props.onIngredientAdded}\r\n                        ingredientRemoved = {this.props.onIngredientRemoved}\r\n                        disabled = {disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        isAuth={this.props.isAuthenticated}\r\n                        price={this.props.price}/>\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary \r\n            ingredients = {this.props.ings}\r\n            price ={this.props.price}\r\n            purchaseCancelled={this.purchaseCancelHandler}\r\n            purchaseContinued={this.purchaseContinueHandler}/>\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed ={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n               \r\n            </Aux>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps)(withErrorHandler (BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return{\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-7ae23.firebaseio.com/ingredients.json')\r\n        .then(response =>{\r\n            dispatch(setIngredients(response.data));\r\n        })\r\n        .catch(error =>{\r\n            dispatch(fetchIngredientsFailed());\r\n        });\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = ( orderData, token ) => {\r\n    return dispatch => {\r\n        dispatch( purchaseBurgerStart() );\r\n        axios.post( '/orders.json?auth=' + token, orderData )\r\n            .then( response => {\r\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\r\n            } )\r\n            .catch( error => {\r\n                dispatch( purchaseBurgerFail( error ) );\r\n            } );\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = ( orders ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get( '/orders.json' + queryParams)\r\n            .then( res => {\r\n                const fetchedOrders = [];\r\n                for ( let key in res.data ) {\r\n                    fetchedOrders.push( {\r\n                        ...res.data[key],\r\n                        id: key\r\n                    } );\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            } )\r\n            .catch( err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            } );\r\n    };\r\n};","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n           <h1>We hope it is dope!</h1>\r\n           <div style = {{width: '100%', margin: 'auto'}}>\r\n               <Burger ingredients ={props.ingredients}/>\r\n            </div>\r\n            <Button\r\n                 btnType=\"Danger\"\r\n                 clicked={props.checkoutCancelled}>CANCEL\r\n             </Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary; ","import React from 'react';\r\nimport classes from './Input.css';\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch ( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'textarea' ):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={classes.InputElement}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity =(value, rules) => {\r\n    let isValid = true;\r\n\r\n    if(rules.required){\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n    if (rules.minLength){\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n    if (rules.maxLength){\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    return isValid;\r\n    }","import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {updateObject, checkValidity} from '../../../shared/utility';\r\n\r\nimport{connect} from 'react-redux';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n                \r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                    \r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation:{},\r\n                valid: true\r\n                \r\n            }\r\n        },\r\n        formIsValid: false,\r\n    }\r\n\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n      \r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.onOrderBurger(order, this.props.token);\r\n        \r\n    }\r\n\r\n   inputChangedHandler = (event, inputIdentifier) => {\r\n       \r\n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\r\n            value: event.target.value,\r\n            valid: checkValidity(event.target.value,this.state.orderForm[inputIdentifier].validation),\r\n            touched: true\r\n        });\r\n        const updatedOrderForm = updateObject(this.state.orderForm, {\r\n            [inputIdentifier]: updatedFormElement\r\n        });\r\n\r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        console.log(formIsValid);\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.props.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    };\r\n};\r\n\r\nexport default connect (mapStateToProps,mapDispatchToProps) (withErrorHandler(ContactData, axios));","import React, {Component} from 'react';\r\nimport CheckoutSummary from  '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Checkout extends Component{\r\n\r\n    checkoutCancelledHandler = () =>{\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler =() => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render () {\r\n        let summary = <Redirect to=\"/\" />\r\n        if ( this.props.ings ) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler} />\r\n                    <Route\r\n                        path={this.props.match.path + '/contact-data'}\r\n                        component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\nexport default connect (mapStateToProps, )(Checkout);","import React from 'react';\r\nimport classes from './Order.css';\r\n\r\nconst order = (props) =>{\r\n    const ingredients = [];\r\n\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push(\r\n            {\r\n                name:ingredientName,\r\n                amount:props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig =>{\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin:'0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'}}\r\n                key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    })\r\n\r\n    return (\r\n    <div className={classes.Order}>\r\n        <p>Ingredients: {ingredientOutput}</p>\r\n        <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component{\r\n    \r\n    componentDidMount(){\r\n       this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render(){\r\n        let orders = <Spinner/>;\r\n        if(!this.props.loading){\r\n            orders = \r\n                this.props.orders.map(order =>(\r\n                <Order \r\n                key={order.id}\r\n                ingredients={order.ingredients}\r\n                price={order.price}/>\r\n            ))\r\n        };\r\n        return(\r\n            <div>\r\n               {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps,) (withErrorHandler(Orders, axios));","import React, {Component} from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {updateObject, checkValidity} from '../../shared/utility';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls:{\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail Address'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    };\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n            const updatedControls = updateObject(this.state.controls, {\r\n                [controlName]: updateObject(this.state.controls[controlName],{\r\n                    value: event.target.value,\r\n                    valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                    touched: true\r\n                }) \r\n            });\r\n            this.setState({controls: updatedControls});\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState =>{\r\n            return{isSignup: !prevState.isSignup};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key = {formElement.id} \r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n        ));\r\n\r\n    if (this.props.loading) {\r\n        form = <Spinner/>\r\n    }\r\n\r\n    let errorMessage = null;\r\n\r\n    if (this.props.error) {\r\n        errorMessage = (\r\n        <p>{this.props.error.message}</p>\r\n        );\r\n    }\r\n\r\n    let authRedirect = null;\r\n    if(this.props.isAuthenticated){\r\n        authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n    }\r\n\r\n        return(\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit = {this.submitHandler}>\r\n                    {form}\r\n                <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button \r\n                clicked = {this.switchAuthModeHandler}\r\n                btnType = \"Danger\">SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\r\n            </div>\r\n        );\r\n            \r\n\r\n        \r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    };\r\n};\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (Auth);\r\n\r\n","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component { \r\n    componentDidMount () {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to =\"/\"/>;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps) (Logout);","import React, {Component} from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport {connect} from 'react-redux';\n\n\nimport Checkout from './containers/Checkout/Checkout';\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n  \n  render(){\n    let routes = (\n      <Switch>\n        <Route path = \"/auth\" exact component = {Auth}/>\n        <Route path = \"/\" exact component = {BurgerBuilder}/>\n        <Redirect to = \"/\" />\n      </Switch>\n    );\n\n    if(this.props.isAuthenticated){\n      routes = (\n      <Switch>\n        <Route path = \"/checkout\" component ={Checkout}/>\n        <Route path = \"/orders\" component = {Orders}/>\n        <Route path = \"/logout\" exact component = {Logout}/>\n        <Route path = \"/auth\" exact component = {Auth}/>\n        <Route path = \"/\" exact component = {BurgerBuilder}/>\n        <Redirect to = \"/\" />\n      </Switch>\n      );\n    }\n    \n  return (\n    <div>\n      <Layout>\n        {routes}\n      </Layout>\n      \n    </div>\n  );\n}\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect (mapStateToProps, mapDispatchProps) (App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = ( state, action ) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject( state, updatedState );\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject( state, updatedSt );\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject( state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    } );\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject( state, { error: true } );\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = ( state, action ) => {\r\n    return updateObject( state, { purchased: false } );\r\n};\r\n\r\nconst purchaseBurgerStart = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst purchaseBurgerSuccess = ( state, action ) => {\r\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\r\n    return updateObject( state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat( newOrder )\r\n    } );\r\n};\r\n\r\nconst purchaseBurgerFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst fetchOrdersStart = ( state, action ) => {\r\n    return updateObject( state, { loading: true } );\r\n};\r\n\r\nconst fetchOrdersSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst fetchOrdersFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart( state, action );\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess( state, action )\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail( state, action );\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) =>{\r\n    return updateObject(state, {error: null, loading: true});\r\n}\r\n\r\nconst authSuccess = (state, action) =>{\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst authFail = (state, action) =>{\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject (state, {token : null, userId: null});\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);   \r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport thunk from 'redux-thunk';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = process.env.NODE_ENV ==='develpoment' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\n\nconst app = (\n    <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render (app, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}